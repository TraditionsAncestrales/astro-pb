---
import { cn } from "@/lib/utils";
import "@splidejs/splide/css";

// STYLES **********************************************************************************************************************************
const { class: className } = Astro.props;
---

<RootElement>
  <div data-target="carousel" class={cn("splide", className)} role="group" aria-label="Carousel">
    <div class="splide__track">
      <ul class="splide__list">
        <slot />
      </ul>
    </div>
  </div>
</RootElement>

<script>
  import Splide from "@splidejs/splide";

  RootElement.ready(($) => {
    const splides: Splide[] = [];
    for (const carousel of $.all("carousel")) {
      const splide = new Splide(carousel, {
        arrows: false,
        drag: false,
        fixedWidth: "24rem",
        gap: "2rem",
        padding: "1rem",
        pagination: false,
        type: "loop",
      });

      splide.on("overflow", (isOverflow) => {
        splide.go(0);
        splide.options = { arrows: isOverflow, drag: isOverflow, clones: isOverflow ? undefined : 0 };
      });

      splide.mount();
      splides.push(splide);
    }
    return () => {
      for (const splide of splides) splide.destroy();
    };
  });
</script>

<style is:global>
  .splide__arrow {
    background-color: rgb(var(--primary)) !important;
  }

  .splide__arrow svg {
    fill: white !important;
  }

  .splide:not(.is-overflow) .splide__arrows {
    display: none;
  }

  .splide:not(.is-overflow) .splide__list {
    justify-content: center;
  }

  .splide:not(.is-overflow) .splide__slide:last-child {
    margin-right: 0 !important;
  }
</style>
