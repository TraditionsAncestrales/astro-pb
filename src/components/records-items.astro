---
import type { Item } from "@/lib/pocketbase/utils";
import { Image } from "@unpic/astro";
import RecordsCarousel from "./records-carousel.astro";
import { BUTTON } from "./ui/button";
import Features from "./ui/features.astro";
import Section, { type SectionProps } from "./ui/section.astro";
import Title from "./ui/title.astro";

// PROPS ***********************************************************************************************************************************
const { intent = "white", items = [], title: singular, ...rest } = Astro.props;

// VARS ************************************************************************************************************************************
const hasSome = items.length > 0;
if (!hasSome && !Astro.slots.has("default")) return;

const isSingle = items.length === 1;
const title = `${singular}${isSingle ? "" : "s"}`;
const { features, href, image, text } = items[0];

// TYPES ***********************************************************************************************************************************
type Props = { items: Item[]; title: string } & SectionProps;
export type TrainingsItemsProps = Props;
---

{
  isSingle ? (
    <Section {intent} {...rest}>
      <Title slot="header" text={title} class="mb-8 xl:hidden" />
      <Image slot="aside" {...image} class="relative shadow-lg shadow-black/50" />
      <Title text={title} class="hidden self-start xl:inline-flex" />
      <Features {intent} {features} />
      <article set:html={text} />
      <a {href} class={BUTTON({ intent: intent === "primary" ? "secondary" : "primary", class: "self-end" })}>
        En savoir plus
      </a>
    </Section>
  ) : (
    <Section intent={intent} expanded={hasSome} {...rest}>
      <Title slot="header" text={title} class="mb-8" />
      {hasSome ? <RecordsCarousel {items} class="w-full" /> : <slot />}
    </Section>
  )
}
